import numpy as np
import cv2
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
from utils import *
from datafield import *
import classifier as clf
import extraction
import detect
from moviepy.editor import VideoFileClip
def pipeline(img):


    # 3. slide_window to find the cars
    # 3.1 half of
    draw_img =np.copy(img)
    ystartList = [400,400,350]
    ystopList = [500,600,700]
    scaleList = [1,1.5,2.2]
    cells_per_stepList=[3,2,1]
    bbox_list=[]
    for ystart,ystop,scale,cells_per_step in zip(ystartList,ystopList,scaleList,cells_per_stepList):
        draw_img,box_list=detect.find_cars(img, ystart, ystop, scale,cells_per_step,
                    df.svc, df.XScaler, df.orient,df.pix_per_cell,df.cell_per_block,
                    df.spatial_size, df.hist_bins,df.spatial_feat,df.hist_feat,df.hog_feat)
        bbox_list.extend(box_list)
    draw_img1 =detect.heatmap(img,bbox_list)

    return draw_img

# 1. decide what features to use
# 2. train the classifier

clf.dataInit()
image = mpimg.imread('test_images/test1.jpg')
resImage = pipeline(image)
#twoImagePlot(image,resImage)
plt.imshow(resImage)
plt.show()
'''
video_output = 'test_video_res.mp4' # name of the video file generated by the vehicle detector
clip1 = VideoFileClip("test_video.mp4") #original video file
white_clip = clip1.fl_image(pipeline) #NOTE: this function expects color images!!
white_clip.write_videofile(video_output, audio=False)'''
